---
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import Pagination from "@components/Pagination.astro";
import Posts from "@components/Posts.astro";
import { slugNameMapper, type SlugType } from "src/lib/slugNameMapper";

interface Props {
  page: Page<CollectionEntry<"post">>;
}

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getCollection("post", ({ data }) => {
    return !(import.meta.env.PROD && data.draft);
  });
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];
  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPosts
      .filter((post) => post.data.tags.includes(tag))
      .sort((a, b) => (a.data.published < b.data.published ? 1 : -1));

    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 10,
    });
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { page } = Astro.props;

const tagName = slugNameMapper[tag as SlugType];
---

<Layout title={`KameWalk / #${tagName}-${page.currentPage}`}>
  <main>
    <h1>#{tagName} がついた記事</h1>
    <Posts posts={page.data} />
  </main>
  <Pagination {page} />
</Layout>

<style>
  main {
    width: 90%;
    max-width: 700px;
    margin: auto;
    margin-top: 0;
    margin-bottom: 40px;
  }

  h1 {
    font-size: 1.5em;
  }
</style>
